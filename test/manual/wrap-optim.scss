@import '../../index';

$media: $media-alt;

@include media-setup-alt();

@include layout-setup-util();
@include layout-setup-page();
@include layout-setup-wrap();

// $media-keys: map-keys($media);
// $media-length: length($media-keys);
// $media-combos: _sort-by(combination-set($media-keys), 'length');

// $media-combo-strings: ();
// @each $combo in $media-combos {
//   $media-combo-strings: append($media-combo-strings, to-string($combo, '-'));
// }

// @include bem-base('wrap');
// .wrap { margin-right: auto; margin-left: auto; }
// .wrap--left { margin-left: 0; }
// .wrap--right { margin-right: 0; }

// // wrap--combos
// @each $combo in $media-combos {
//   $combo-string: kebab-string($combo);
//   @if length($combo) == 1 {
//     @each $pair in pair-set($combo) {
//       @include medium($pair...) {
//         %wrap--#{kebab-string($pair)}end, .wrap--#{$combo-string} { max-width: medium-value('content-width'); }
//       }
//     }
//   }
//   @else if length($combo) == 2 {
//     @each $pair in pair-set($combo) {
//       @if nth($pair, 2) {
//         @include medium($pair...) {
//           %wrap--#{kebab-string($pair)}, .wrap--#{$combo-string} { max-width: medium-value('content-width'); }
//         }
//       } @else { .wrap--#{$combo-string} { @extend %wrap--#{kebab-string($pair)}end; } }
//     }
//   }
//   @else {
//     @each $pair in slice(pair-set($combo), 2) {
//       @if nth($pair, 2) { .wrap--#{$combo-string} { @extend %wrap--#{kebab-string($pair)}; } }
//       @else { .wrap--#{$combo-string} { @extend %wrap--#{kebab-string($pair)}end; } }
//     }
//   }
// }

// // wrap--each
// .wrap--each { @extend .wrap--#{kebab-string($media-keys)}; }

// // wrap--to-x, // wrap--x-to
// @for $i from 1 through $media-length {
//   .wrap--#{nth($media-keys, $i)}-to {
//     @extend .wrap--#{kebab-string(slice($media-keys, $i))}; }
//   .wrap--to-#{nth($media-keys, $i)} {
//     @extend .wrap--#{kebab-string(slice($media-keys, 1, $i))}; }
// }

// // wrap--[ranges]
// @each $set in range-set($media-keys) {
//   $i: nth($set,1); $j: nth($set,2);
//   .wrap--#{nth($media-keys, $i)}-to-#{nth($media-keys, $j)} {
//     @extend .wrap--#{kebab-string(slice($media-keys, $i ,$j))}; }
// }
