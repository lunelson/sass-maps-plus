.test {
  /*


  ADD / SUB
  */
  /* add/sub: a or b unitless, or a b units match */
  add: 3em;
  /* add/sub: a or b unitless, or a b units match */
  add: 3em;
  /* add/sub: a or b unitless, or a b units match */
  add: 3em;
  /* add/sub: a or b unitless, or a b units match */
  sub: -1em;
  /* add/sub: a or b unitless, or a b units match */
  sub: -1em;
  /* add/sub: a or b unitless, or a b units match */
  sub: -1em;
  /* add/sub: a or b unitless, or a b units match */
  add: true;
  /* add/sub: a or b unitless, or a b units match */
  add: true;
  /* add/sub: a or b unitless, or a b units match */
  add: true;
  /* add/sub: a or b unitless, or a b units match */
  sub: true;
  /* add/sub: a or b unitless, or a b units match */
  sub: true;
  /* add/sub: a or b unitless, or a b units match */
  sub: true;
  /*


  MUL
  */
  /* mult: a or b must be unitless, or both */
  mul: 2em;
  /* mult: a or b must be unitless, or both */
  mul: 2em;
  /* mult: a or b must be unitless, or both */
  mul: 2;
  /* mult: a or b must be unitless, or both (FAIL) */
  mul: 2em*em;
  /* mult: a or b must be unitless, or both */
  mul: true;
  /* mult: a or b must be unitless, or both */
  mul: true;
  /* mult: a or b must be unitless, or both */
  mul: true;
  /* mult: a or b must be unitless, or both (FAIL) */
  mul: false;
  /*


  DIV
  */
  /* div: b must be unitless, or both */
  div: 0.5em;
  /* div: b must be unitless, or both */
  div: 0.5;
  /* div: b must be unitless, or both (FAIL)*/
  div: 0.5/em;
  /* div: b must be unitless, or both */
  div: true;
  /* div: b must be unitless, or both */
  div: true;
  /* div: b must be unitless, or both (FAIL)*/
  div: false; }

.hello-world {
  test: 0.5em;
  test: calc(1.5em - 1rem);
  test: 0.25em;
  test: calc(0.25em - (1em + 1ex)); }
