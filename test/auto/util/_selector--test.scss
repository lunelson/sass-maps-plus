
@include test-module('util/selector') {

  // sel-lasts
  @include test('sel-lasts [fn]') {
    @include assert('parses last selector(s) in &') {
      @include input {
        .foo, .bar {
          output: quote(sel-lasts());
        }
      }
      @include expect {
        output: ".foo, .bar";
      }
    }
  }

  // sel-initials
  @include test('sel-initials [fn]') {
    @include assert('parses initial selector(s) in &') {
      @include input {
        &, .foo, .bar {
          output: quote(sel-initials());
        }
      }
      @include expect {
        output: '[data-module="util/selector"] [data-test="sel-initials [fn]"] [data-assert="parses initial selector(s) in &"], [data-module="util/selector"] [data-test="sel-initials [fn]"] [data-assert="parses initial selector(s) in &"] .input';
      }
    }
  }

  // sel-insert-parents
  @include test('sel-insert-parents [fn]') {
    @include assert('inserts selector before last selector(s) in &') {
      @include input {
        .foo, .bar {
          output: quote(sel-insert-parents('.baz' '.bif'));
        }
      }
      @include expect {
        output: '[data-module="util/selector"] [data-test="sel-insert-parents [fn]"] [data-assert="inserts selector before last selector(s) in &"] .input .baz .foo, [data-module="util/selector"] [data-test="sel-insert-parents [fn]"] [data-assert="inserts selector before last selector(s) in &"] .input .baz .bar, [data-module="util/selector"] [data-test="sel-insert-parents [fn]"] [data-assert="inserts selector before last selector(s) in &"] .input .bif .foo, [data-module="util/selector"] [data-test="sel-insert-parents [fn]"] [data-assert="inserts selector before last selector(s) in &"] .input .bif .bar';
      }
    }
    @include assert('inserts selector plus combinator before last selector(s) in &') {
      @include input {
        .foo, .bar {
          output: quote(sel-insert-parents('.baz' '.bif', '+'));
        }
      }
      @include expect {
        output: '[data-module="util/selector"] [data-test="sel-insert-parents [fn]"] [data-assert="inserts selector plus combinator before last selector(s) in &"] .input .baz + .foo, [data-module="util/selector"] [data-test="sel-insert-parents [fn]"] [data-assert="inserts selector plus combinator before last selector(s) in &"] .input .baz + .bar, [data-module="util/selector"] [data-test="sel-insert-parents [fn]"] [data-assert="inserts selector plus combinator before last selector(s) in &"] .input .bif + .foo, [data-module="util/selector"] [data-test="sel-insert-parents [fn]"] [data-assert="inserts selector plus combinator before last selector(s) in &"] .input .bif + .bar';
      }
    }
  }

}

