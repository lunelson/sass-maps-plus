@import '@lunelson/sass-throw/index';
@import '../index';

$sass-throw-catch: true;
$map: ( alpha: 1, beta: 2, gamma: 3 );
$map-nested: (
  alpha: (
    beta: (
      gamma: 3,
      delta: 4,
    ),
    epsilon: 5,
  ),
);

.map-get {

  /* @return null when $map is empty map/list */
  expect: "null";
  result: quote(inspect(map-get((), alpha)));

  /* ERROR when $map is not a map */
  expect: "ERROR: argument `$map` of `map-get($map, $keys...)` must be a map";
  result: quote(inspect(map-get(null, alpha)));

  /* ERROR when no $keys... provided */
  expect: "ERROR: function `map-get($map, $keys...)` is missing rest-argument `$keys`";
  result: quote(inspect(map-get($map)));

  /* @return value at $keys... path */
  expect: "(beta: (gamma: 3, delta: 4), epsilon: 5)";
  result: quote(inspect(map-get($map-nested, alpha)));
  expect: "(gamma: 3, delta: 4)";
  result: quote(inspect(map-get($map-nested, alpha, beta)));
  expect: "3";
  result: quote(inspect(map-get($map-nested, alpha, beta, gamma)));
}
