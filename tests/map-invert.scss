@import '@lunelson/sass-throw/index';
@import '../index';

$throw-catch: true;
$map: ( alpha: 1, beta: 2, gamma: 3 );
$map-nested: (
  alpha: (
    beta: (
      gamma: 3,
      delta: 4,
    ),
    epsilon: 5,
  ),
);

.map-invert {
  /* ERROR if $map is not a map */
  expect: "ERROR: argument `$map` of map-invert($map) must be a map";
  result: quote(inspect(map-invert(null)));
  result: quote(inspect(map-invert('foo')));
  /* @return inverted map */
  expect: "(1: alpha, 2: beta, 3: gamma)";
  result: quote(inspect(map-invert($map)));
  expect: "((beta: (gamma: 3, delta: 4), epsilon: 5): alpha)";
  result: quote(inspect(map-invert($map-nested)));
}
